//Solution 1:

//C++
vector<int> resultArray(vector<int>& nums) {
        vector<int> arr1{nums[0]};
        vector<int> arr2{nums[1]};
        for(int i=2; i<nums.size(); ++i){
            if(arr1.back()>arr2.back()){
                arr1.push_back(nums[i]);
            }
            else{
                arr2.push_back(nums[i]);
            }
        }
        vector<int> ans = arr1;
        for(auto i:arr2){
            ans.push_back(i);
        }

        return ans;
}


//Java

public int[] resultArray(int[] nums) {
        List<Integer> arr1 = new ArrayList<>();
        List<Integer> arr2 = new ArrayList<>();

        arr1.add(nums[0]);
        arr2.add(nums[1]);

        for (int i = 2; i < nums.length; ++i) {
            if (arr1.get(arr1.size() - 1) > arr2.get(arr2.size() - 1)) {
                arr1.add(nums[i]);
            } else {
                arr2.add(nums[i]);
            }
        }

        int[] ans = new int[nums.length];
        int index = 0;
        for (Integer i : arr1) {
            ans[index++] = i;
        }
        for (Integer i : arr2) {
            ans[index++] = i;
        }

        return ans;
}